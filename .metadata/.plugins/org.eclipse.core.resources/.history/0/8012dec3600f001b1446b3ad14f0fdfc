package com.kh.spring.demo.controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import com.kh.spring.demo.model.service.DemoService;

//web mvc 프로젝트에서 controller 객체를 spring-bean으로 등록할때는
//@Controller를 사용함.


@Controller
public class DemoController {
	
	@Autowired
	@Qualifier("service")
	private DemoService service;
	
	//클라이언트가 요청한 주소랑 매핑되는 메소드를 생성해서 처리
	//주소와 매핑을 하기위해서는 @ReqeustMapping을 사용
	
	@RequestMapping("/demo/demo.do")
	public String demo() {
		System.out.println("mapping매소드 호출");
		return "demo/demo";//ReqeustDispatcher.forward()
	}
	
	
	//클라이언트가 전송한 데이터나 요청내용을 mapping매소드에서 처리하려면 
	//HttpServletRequest.get
	//각정보를 매개변수로 선언해서 처리할 수가 있음
	//매개변수를 선언하면 자료형에 맞는 값을 spring이 대입해줌
	//스프링이 받을수잇는 타입  mapping매소드의 매개변수로 선언할 수 있는 타입
	// HttpServletRqeust / HttpServletResponse 객체 
	// HttpSession <- 서블릿에선 request.getSession()으로 불러와야 했음 
	// java.util.Locale <- 서버가 실행되는 지역을 가져옴 ko-kr ,us ,ja-jp이런거 
	// InputStream, Reader 
	// OutputStream, Writer
	
	//파라미터값, 서버의 값을 보관하는 객체 선언가능 
	//Map, Model, ModelAndView
	//파라미터값을 받는 VO객체 (ex:Person Member Product)
	
	//파라미터에 어노테이션을 통해서 특정값을 받아올 수 있음
	//매개변수 선언 위채에 사용 (@RequestParam("abc") String alpa)
	//@RequestParam(value="name") String name
	//@ReqeustHeader(value="해더키값") 헤더의 정보들
	//@CookieValue(value="쿠키키값") String name
	
	//@RequestMapping(value=/demo/demo/{값})
	//@PathValiable("값") String name -> Rest방식으로 주소를 작성했을 때
	
	//@RequestMapping밑에 
	//@ResponseBody -> 클라이언트에게 json방식으로 값을 전송할때  * springBoot에서 default로 선언됨.
	//@RequestBody -> 클라이언트에게 json방식으로 값을 받을때
	//* 객체 매핑 spring bean을 등록을 해줘야함. -> jackson
	
	
	
	
	
	@RequestMapping("demo/demo")
	public String demo1(HttpServletRequest request, HttpServletResponse response) {
		//기본 서블릿과 동일하게 mapping매소드를 이용해보자 
		
		String devName = request.getParameter("devName");
		int devAge = Integer.parseInt(request.getParameter("devAge"));
		String devEamil = request.getParameter("devEamil");
		String devGender = request.getParameter("devGender");
		String[] devLang = request.getParameterValues("devLang");
		
		System.out.println(devName, devAge, devEamil, devGender);
		for(String l : devLang) {
			System.out.println(l);
		}
		
		
		
		return "demo/demoResult";
	}

}
